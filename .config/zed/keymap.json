// Docs: https://zed.dev/docs/key-bindings
// Default keymap: `zed: open default keymap` command
//
// Missing actions:
// 1. {assistant_panel,project_panel,git_panel}::TogglePanel
//    Toggle a panel without focusing it. alt-shift-{a,e,0}.
// 2. workspace::CloseActivePane
//    Close the current pane. q.

[
  {
    "bindings": {
      "alt-=": "zed::IncreaseBufferFontSize",
      "alt-+": "zed::IncreaseBufferFontSize",
      "alt--": "zed::DecreaseBufferFontSize",
      "alt-,": "zed::OpenSettings",
      "alt-shift-x": "zed::Extensions",
      "shift shift": "project_symbols::Toggle",
      "alt-shift-p": "command_palette::Toggle",
      "alt-o": "workspace::Open",
      "alt-shift-t": "pane::ReopenClosedItem",
      "alt-w": "pane::CloseActiveItem",
      "alt-[": "pane::ActivatePreviousItem",
      "alt-]": "pane::ActivateNextItem",
      "ctrl-h": "workspace::ToggleLeftDock",
      "ctrl-l": "workspace::ToggleRightDock",
      "ctrl-j": "workspace::ToggleBottomDock",
      "alt-0": "git_panel::ToggleFocus",
      "alt-a": "agent::ToggleFocus",
      "alt-e": "project_panel::ToggleFocus",
      "alt-s": "outline_panel::ToggleFocus",
      "ctrl-p": "outline_panel::ToggleActiveEditorPin",
      "alt-shift-0": ["workspace::SendKeystrokes", "alt-0 alt-0"], // workaround; can open, can't toggle
      "alt-shift-a": ["workspace::SendKeystrokes", "alt-a alt-h"],
      "alt-shift-e": ["workspace::SendKeystrokes", "alt-e alt-l"],
      "alt-h": "workspace::ActivatePaneLeft",
      "alt-j": "workspace::ActivatePaneDown",
      "alt-k": "workspace::ActivatePaneUp",
      "alt-l": "workspace::ActivatePaneRight",
      "ctrl-`": "terminal_panel::Toggle",
      "alt-shift-h": "workspace::SwapPaneLeft",
      "alt-shift-j": "workspace::SwapPaneDown",
      "alt-shift-k": "workspace::SwapPaneUp",
      "alt-shift-l": "workspace::SwapPaneRight",
      "alt-enter": "menu::SecondaryConfirm",
      "f4": "debugger::Start",
      "shift-f4": "debugger::Restart",
      "f5": "debugger::Continue",
      "shift-f5": "debugger::Stop",
      "f8": "debugger::StepOver",
      "f9": "debugger::StepInto",
      "f10": "debugger::StepOut"
    }
  },
  {
    "context": "mode == single_line", // bug? (Picker || Menu) not true in Agent history search box
    "bindings": {
      "up": "menu::SelectPrevious",
      "down": "menu::SelectNext"
    }
  },
  {
    "context": "Editor && vim_mode != normal",
    "bindings": {
      "alt-a": "editor::SelectAll",
      "alt-c": "editor::Copy",
      "alt-v": "editor::Paste",
      "alt-x": "editor::Cut",
      "alt-z": "editor::Undo",
      "alt-y": "editor::Redo",
      "alt-backspace": "editor::DeleteToPreviousWordStart"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "space r": "project_panel::Rename",
      "f2": "project_panel::Rename",
      "space n": "project_panel::NewFile",
      "alt-n": "project_panel::NewFile",
      "space d": "project_panel::NewDirectory",
      "d": "project_panel::Delete",
      "alt-x": "project_panel::Cut",
      "alt-c": "project_panel::Copy",
      "alt-v": "project_panel::Paste",
      "alt-shift-enter": "workspace::OpenWithSystem"
    }
  },
  {
      "context": "(ProjectPanel || GitPanel) && not_editing",
      "bindings": {
        "q": "workspace::ToggleLeftDock" // workaround for the absence of "workspace::CloseActivePane"
      }
  },
  {
    "context": "vim_mode == normal || not_editing || EmptyPane", // why is not_editing not true in EmptyPane?
    "bindings": {
      "space space": "file_finder::Toggle",
      "space t": "tab_switcher::ToggleAll",
      "space f": ["task::Spawn", {"task_name": "File Finder", "reveal_target": "center"}], // hopefully live grep lands soon
      "space h": "workspace::NewSearch",
      "space l": "task::Spawn",
      "alt-enter": "repl::Run",
      "ctrl-c": "repl::Interrupt"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "alt-backspace": ["terminal::SendKeystroke", "ctrl-w"],
      "alt-t": "workspace::NewTerminal",
      "alt-c": "terminal::Copy",
      "alt-v": "terminal::Paste",
      "ctrl-h": "pane::SplitLeft",
      "ctrl-l": "pane::SplitRight",
      "ctrl-j": "pane::SplitDown",
      "ctrl-k": "pane::SplitUp",
      "alt-shift-h": "workspace::SwapPaneLeft",
      "alt-shift-l": "workspace::SwapPaneRight",
      "alt-shift-j": "workspace::SwapPaneDown",
      "alt-shift-k": "workspace::SwapPaneUp",
      "alt-p": "terminal::ToggleViMode",
      "alt-u": "terminal::ScrollPageUp",
      "alt-d": "terminal::ScrollPageDown"
    }
  },
  {
    "context": "Terminal && vi_mode",
    "bindings": {
      "/": "buffer_search::Deploy"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "f7": "editor::ToggleBreakpoint"
    }
  },
  {
    "context": "Editor && edit_prediction",
    "bindings": {
      "alt-;": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Editor && edit_prediction_conflict",
    "bindings": {
      "alt-;": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "(Editor && mode == full) || (ContextEditor > Editor)",
    "bindings": {
      "alt->": "agent::QuoteSelection"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      "j": ["vim::Down", { "display_lines": true }],
      "k": ["vim::Up", { "display_lines": true }],
      "Y": ["workspace::SendKeystrokes", "y $"],
      "alt-o": "pane::GoBack",
      "alt-i": "pane::GoForward",
      "alt-b": "vim::PageUp",
      "alt-f": "vim::PageDown",
      "alt-u": "vim::ScrollUp",
      "alt-d": "vim::ScrollDown",
      "alt-c": "editor::Copy",
      "space s": "outline::Toggle",
      "space r": "editor::Rename",
      "space e": "editor::GoToDiagnostic",
      // "[ e": "editor::GoToPreviousDiagnostic", // bug (introduced in some update): Zed waits for a while after `ci[`
      // "] e": "editor::GoToDiagnostic",
      "alt-shift-f": "editor::FormatSelections",
      "ctrl-,": ["editor::SelectPrevious", { "replace_newest": false }],
      "ctrl-.": ["editor::SelectNext", { "replace_newest": false }]
    }
  },
  {
    "context": "Markdown",
    "bindings": {
      "alt-c": "markdown::Copy"
    }
  },
  {
    "context": "AgentPanel",
    "bindings": {
      "alt-n": "agent::NewThread",
      "alt-t": "agent::NewThread",
      "alt-shift-m": "agent::ToggleModelSelector",
      "alt-<": "assistant::InsertIntoEditor",
      "alt-left": "pane::GoBack",
      "shift-escape": "agent::ExpandMessageEditor"
    }
  },
  {
    "context": "(MessageEditor > Editor) || (EditMessageEditor > Editor) || (AgentPanel > ContextEditor)",
    "bindings": {
      "enter": "editor::Newline",
      "alt-enter": "agent::Chat",
      "ctrl-enter": "agent::Chat",
      "alt-k": "agent::OpenHistory",
      "alt-r": "agent::RemoveAllContext",
      "alt-n": "agent::NewTextThread",
      "alt-t": "agent::NewThread",
      "shift-escape": "agent::ExpandMessageEditor"
    }
  },
  {
    "context": "EditMessageEditor > Editor",
    "bindings": {
      "alt-enter": "menu::Confirm",
      "ctrl-enter": "menu::Confirm"
    }
  },
  {
    "context": "AgentPanel > ThreadHistory > Editor",
    "bindings": {
      "delete": "agent::RemoveSelectedThread"
    }
  },
  {
    "context": "(CommitEditor > Editor) || (GitCommit > Editor) || (GitPanel > Editor)",
    "bindings": {
      "enter": "editor::Newline",
      "shift-escape": "git::ExpandCommitEditor",
      "alt-;": "git::GenerateCommitMessage",
      "alt-enter": "git::Commit",
      "alt-shift-enter": "git::Amend",
      "alt-k": ["workspace::SendKeystrokes", "alt-0 alt-0"] // workaround for going from commit editor to changes list
    }
  },
  {
    "context": "GitPanel && ChangesList",
    "bindings": {
      "alt-shift-y": "git::ToggleStaged",
      "alt-j": ["workspace::SendKeystrokes", "tab"], // workaround for going from changes list to commit editor
      // bug: git::StageAndNext does not work in GitPanel:
      "ctrl-alt-shift-f23": "git::ToggleStaged",
      "alt-y": ["workspace::SendKeystrokes", "ctrl-alt-shift-f23 j"]
    }
  },
  {
    "context": "Editor && !agent_diff",
    "bindings": {
      "alt-shift-y": "git::ToggleStaged"
    }
  },
  {
    "context": "DebugPanel && !Editor",
    "bindings": {
      "h": "variable_list::CollapseSelectedEntry",
      "j": "menu::SelectNext",
      "k": "menu::SelectPrevious",
      "l": "variable_list::ExpandSelectedEntry"
    }
  }
]
